apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "codedx.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "codedx.name" . }}
    helm.sh/chart: {{ include "codedx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: "frontend"
spec:
  {{ $hasLicense := (include "codedx.license.exists" .) -}}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "codedx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "frontend"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "codedx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "frontend"
        # Extra labels so that the network policy can match against this
        codedx.com-instance: {{ .Release.Name }}
        codedx.com-component: "frontend"
    spec:
      {{ if .Values.codedxTomcatImagePullSecrets -}}
      imagePullSecrets: {{ toYaml .Values.codedxTomcatImagePullSecrets | nindent 6 -}}
      {{ end -}}
      serviceAccountName: {{ include "codedx.serviceAccountName" . }}
      serviceAccount: {{ include "codedx.serviceAccountName" . }}
      containers:
      - env:
        - name: SUPERUSER_NAME
          value: "admin"
        - name: SUPERUSER_PASSWORD
          value: {{ .Values.codedxAdminPassword | quote }}
        image: {{ .Values.codedxTomcatImage | quote }}
        name: "{{ include "codedx.name" . }}"
        readinessProbe:
          httpGet:
            path: /codedx/login
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /codedx/login
            port: 8080
          initialDelaySeconds: 600
          periodSeconds: 15
          timeoutSeconds: 10
        command: ["start.sh"]
        args: {{ include "codedx.props.params.separated" . | nindent 8 }}
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        # Code Dx appdata
        - mountPath: /opt/codedx
          name: {{ include "volume.fullname" . | quote }}
        # MariaDB props
        - mountPath: {{ include "codedx.mariadb.props.path" . }}
          name: codedx-mariadb-props-secret-volume
          subPath: {{ include "codedx.mariadb.props.name" . }}
        # Main Code Dx config
        - mountPath: /opt/codedx/codedx.props
          name: codedx-props-configmap-volume
          subPath: codedx.props
        # Any extra config files from codedx.props.extra
        {{ range .Values.codedx.props.extra -}}
        - mountPath: /opt/codedx/{{ .key }}
          name: codedx-extra-props-{{ .key }}-volume
          subPath: {{ .key | quote }}
        {{- end }}
        # Command args to have Code Dx load extra props files
        - mountPath: /usr/local/tomcat/bin/setenv.sh
          name: codedx-props-configmap-env-volume
          subPath: setenv.sh
        {{ if $hasLicense -}}
        - mountPath: /opt/codedx/license.lic
          name: codedx-license-secret-volume
          subPath: license.lic
        {{- end }}
      initContainers:
        - name: {{ include "dbinit.fullname" . }}
          image: "ubuntu:18.04"
          command: ["bash", "-c", "for i in {1..60}; do if (timeout 2 bash -c \"</dev/tcp/{{ .Release.Name }}-mariadb/3306\" echo $?); then echo 'Successfully connected to MariaDB port'; exit 0; else echo 'Retrying database connection...'; sleep 2; fi; done; echo 'MariaDB is unavailable'; exit 1"]
      restartPolicy: Always
      volumes:
      - name: {{ include "volume.fullname" . | quote }}
        persistentVolumeClaim:
          claimName: {{ include "volume.fullname" . | quote }}
      - name: codedx-props-configmap-volume
        configMap:
          name: {{ include "codedx.props.configMapName" . | quote }}
          items:
          - key: codedx.props
            path: codedx.props
      - name: codedx-props-configmap-env-volume
        configMap:
          name: {{ include "codedx.props.configMapName" . | quote }}
          items:
          - key: tomcat.env
            path: setenv.sh
      - name: codedx-mariadb-props-secret-volume
        secret:
          secretName: {{ include "codedx.mariadb.secretName" . }}
          items:
          - key: codedx.mariadb.props
            path: {{ include "codedx.mariadb.props.name" . }}
      {{ range .Values.codedx.props.extra -}}
      - name: codedx-extra-props-{{ .key }}-volume
        secret:
          secretName: {{ .secretName | quote }}
          items:
          - key: {{ .key }}
            path: {{ .key }}
      {{- end }}
      {{ if $hasLicense -}}
      - name: codedx-license-secret-volume
        secret:
          secretName: {{ include "codedx.license.secretName" . | quote }}
          items:
          - key: license.lic
            path: license.lic
      {{- end }}

status: {}
