apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "codedx.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "codedx.name" . }}
    helm.sh/chart: {{ include "codedx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: "frontend"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "codedx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "frontend"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "codedx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "frontend"
    spec:
      containers:
      - env:
        - name: DB_DRIVER
          value: "com.mysql.jdbc.Driver"
        - name: DB_PASSWORD
          value: {{ .Values.rootUserDatabasePassword | quote }}
        - name: DB_URL
          value: "jdbc:mysql://{{ .Release.Name }}-mariadb.default.svc.cluster.local/codedx"
        - name: DB_USER
          value: "root"
        - name: SUPERUSER_NAME
          value: "admin"
        - name: SUPERUSER_PASSWORD
          value: {{ .Values.codedxAdminPassword | quote }}
        image: {{ .Values.codedxTomcatImage | quote }}
        name: "{{ include "codedx.name" . }}"
        readinessProbe:
          httpGet:
            path: /codedx/login
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /codedx/login
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 15
          timeoutSeconds: 10
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /opt/codedx
          name: {{ include "volume.fullname" . | quote }}
      initContainers:
        - name: {{ include "dbinit.fullname" . }}
          image: "ubuntu:18.04"
          command: ["bash", "-c", "for i in {1..60}; do if (cat < /dev/tcp/{{ .Release.Name }}-mariadb/3306); then echo 'Successfully connected to MariaDB port'; exit 0; else echo 'Retrying database connection...'; sleep 2; fi; done; echo 'MariaDB is unavailable'; exit 1"]
      restartPolicy: Always
      volumes:
      - name: {{ include "volume.fullname" . | quote }}
        persistentVolumeClaim:
          claimName: {{ include "volume.fullname" . | quote }}
status: {}
