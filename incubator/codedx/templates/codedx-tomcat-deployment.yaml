apiVersion: extensions/v1beta1
kind: Deployment
{{/*
Note: This ne/tpl weirdness is an attempt to force-cast the result of these "includes"
to a boolean value so that the "if" checks work properly against these variables on
Mac OS. For some reason no-value variables are interpreted as "true" in an `if` check.
(Issue present on Mac OS Mojave 10.14.2; Helm client+server v2.12.1.) 
*/}}
{{- $hasProps := ne "" (tpl (include "codedx.props.exists" .) .) -}}
{{- $hasLicense := ne "" (tpl (include "codedx.license.exists" .) .) -}}
metadata:
  name: {{ include "codedx.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "codedx.name" . }}
    helm.sh/chart: {{ include "codedx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: "frontend"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "codedx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "frontend"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "codedx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "frontend"
        # Extra labels so that the network policy can match against this
        app: {{ include "codedx.name" . }}
        instance: {{ .Release.Name }}
        component: "frontend"
    spec:
      serviceAccountName: {{ include "codedx.serviceAccountName" . }}
      serviceAccount: {{ include "codedx.serviceAccountName" . }}
      containers:
      - env:
        - name: SUPERUSER_NAME
          value: "admin"
        - name: SUPERUSER_PASSWORD
          value: {{ .Values.codedxAdminPassword | quote }}
        image: {{ .Values.codedxTomcatImage | quote }}
        name: "{{ include "codedx.name" . }}"
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /opt/codedx
          name: {{ include "volume.fullname" . | quote }}
        {{ if $hasProps -}}
        - mountPath: /opt/codedx/codedx.props
          name: codedx-props-configmap-volume
          subPath: codedx.props
        {{- end }}
        {{ if $hasLicense -}}
        - mountPath: /opt/codedx/license.lic
          name: codedx-license-secret-volume
          subPath: license.lic
        {{- end }}
      initContainers:
        - name: {{ include "dbinit.fullname" . }}
          image: "ubuntu:18.04"
          command: ["bash", "-c", "for i in {1..60}; do if (cat < /dev/tcp/{{ .Release.Name }}-mariadb/3306); then echo 'Successfully connected to MariaDB port'; exit 0; else echo 'Retrying database connection...'; sleep 2; fi; done; echo 'MariaDB is unavailable'; exit 1"]
      restartPolicy: Always
      volumes:
      - name: {{ include "volume.fullname" . | quote }}
        persistentVolumeClaim:
          claimName: {{ include "volume.fullname" . | quote }}
      {{ if $hasProps -}}
      - name: codedx-props-configmap-volume
        configMap:
          name: {{ include "codedx.props.configMapName" . | quote }}
          items:
          - key: codedx.props
            path: codedx.props
      {{- end }}
      {{ if $hasLicense -}}
      - name: codedx-license-secret-volume
        secret:
          secretName: {{ include "codedx.license.secretName" . | quote }}
          items:
          - key: license.lic
            path: license.lic
      {{- end }}

status: {}
