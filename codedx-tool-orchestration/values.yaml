# Default values for codedx-tool-orchestration.

codeDxBaseUrl: http://host.docker.internal:8080

imageNameCodeDxTools: "codedx-tools:v1.0"
imageNameCodeDxToolsMono: "codedx-toolsmono:v1.0"
imageNameNewAnalysis: "codedx-newanalysis:v1.0"
imageNameSendResults: "codedx-results:v1.0"
imageNameZap: "codedx-zaprunner:v1.0"
imagePullSecretKey: ""

toolServiceImageName: codedx-tool-service:v1.0
toolServiceImagePullSecrets: []
toolServicePort: 3333
toolServiceApiKey: cc224a8f-a307-416e-a6dd-769600ac8e2c

logImageName: busybox

# NOTE: Enabling this will not generate a network policy for
# minio - see minio chart docs.
# ref: https://github.com/helm/charts/tree/master/stable/minio#networkpolicy
#
networkPolicy:
  enabled: true
  codeDxLabels: {}
  argoEnabled: true
  # Enables a network policy specific for the tool service (currently just
  # denying minio egress, but will limit ingress to tool service and
  # workflow pods in the future.)
  #
  minioEnabled: true
  # Tool service needs access to k8s api server on port 443, which needs to be
  # selected by IP. By default all egress is allowed on port 443; this
  # property selects targets on that port. This also affects the argo
  # network policy (if enabled) since it manages workflows running on the cluster.
  #
  apiServerSelectors: []
  # Port for k8s API server (usually 443 or 8443)
  kubeApiPort: 443

serviceAccount:
  create: true
  # (optional)
  name:

podSecurityPolicy:
  create: true
  # (optional)
  name:
  bind: true
  annotations: {}

# NOTE: These are setting attributes for the `argo` dependency
argo:
  images:
    tag: v2.3.0
  ui:
    enabled: false

# NOTE: These are setting attributes for the `minio` dependency
minio:
  accessKey: "231a5aab-7ffc-49ff-a954-83f97ee416a4"
  secretKey: "89968457-bf3a-4716-9863-b99e04b0e4ee"
  service:
    type: LoadBalancer
    port: 9000
