# Default values for codedx-tool-orchestration.

codeDxBaseUrl: http://host.docker.internal:8080

imageNameCodeDxTools: "codedx-tools:v1.0"
imageNameCodeDxToolsMono: "codedx-toolsmono:v1.0"
imageNameNewAnalysis: "codedx-newanalysis:v1.0"
imageNameSendResults: "codedx-results:v1.0"
imageNameZap: "codedx-zaprunner:v1.0"
imagePullSecretKey: ""

toolServiceImageName: codedx-tool-service:v1.0
toolServiceImagePullSecrets: []
toolServicePort: 3333
toolServiceApiKey: cc224a8f-a307-416e-a6dd-769600ac8e2c

# Number of replicas for the tool orchestration sevice.
#
numReplicas: 3

deploymentStrategy:
  type: RollingUpdate

service:
  type: ClusterIP
  annotations: {}

# Network policy options for the tool service and its dependencies
#
networkPolicy:
  # Enables a network policy for the tool service, enabling ingress on port 3333 and
  # egress through port 8080 and kubeApiPort (below).
  #
  enabled: true
  # Selectors for the Code Dx pod in the network policy, used for
  # both ingress and egress. If unspecified, all egress will be allowed
  # from port 8080 and all ingress will be allowed to port 3333.
  #
  codeDxSelectors: []
  # Enables a network policy for tool service workflow pods denying all ingress.
  #
  twsWorkflowsEnabled: true
  # Enables an argo network policy allowing only egress on 'kubeApiPort' (below)
  # and denying any ingress.
  #
  argoEnabled: true
  # Enables a minio network policy specific for the tool service requirements (currently just
  # denying minio egress, but will limit ingress to tool service and
  # workflow pods in the future.)
  #
  minioEnabled: true
  # Tool service needs access to k8s api server on port 443, which needs to be
  # selected by IP. By default all egress is allowed on port 443; this
  # property selects targets on that port. This also affects the argo
  # network policy (if enabled) since it manages workflows running on the cluster.
  #
  apiServerSelectors: []
  # Port for k8s API server (usually 443 or 8443)
  kubeApiPort: 443

# Options for the service account used for the tool service.
#
serviceAccount:
  create: true
  # (optional)
  name:

podSecurityPolicy:
  tws:
    create: true
    # (optional)
    name:
    bind: true
    annotations: {}
    
  # PSP applied to all workflow pods
  twsWorkflows:
    create: true
    # (optional)
    name: 
    bind: true
    annotations: {}

  argo:
    create: true
    # (optional)
    name:
    bind: true
    annotations: {}
  
  minio:
    create: true
    # (optional)
    name:
    bind: true
    annotations: {}

# NOTE: These are setting attributes for the `argo` dependency
argo:
  images:
    tag: v2.3.0
  ui:
    enabled: false

# NOTE: These are setting attributes for the `minio` dependency
minio:
  accessKey: "231a5aab-7ffc-49ff-a954-83f97ee416a4"
  secretKey: "89968457-bf3a-4716-9863-b99e04b0e4ee"
  service:
    type: ClusterIP
    port: 9000
