# This file contains example YAML and configuration steps required to use Code Dx with an 
# external database, which is any MariaDB/MySQL database not created by the Code Dx chart.
# 
# Here are the steps required to use Code Dx with an external database:
#
# 1) Create a database user for Code Dx. You can customize the following statement to create
#    a Code Dx database user named codedx (remove REQUIRE SSL if SSL/TLS is not required).
#
#    CREATE USER 'codedx'@'%' IDENTIFIED BY 'enter-a-password-here' REQUIRE SSL;
#
# 2) Apply any database configuration changes necessary to allow remote database connections. 
#
# 3) Create a Code Dx database. The following statement creates a Code Dx database named codedxdb.
#
#    CREATE DATABASE codedxdb;
#
# 4) Grant required privileges on the Code Dx database to the database user you created. The
#    following statements grant permissions to the codedx database user.
#
#    GRANT SELECT, INSERT, UPDATE, DELETE,  CREATE, ALTER, REFERENCES, INDEX, DROP ON codedxdb.* to 'codedx'@'%';
#    FLUSH PRIVILEGES;
#
# 5) Set the optimizer_search_depth database variable to 0, the character set to utf8mb4, and the collation to
#    utf8mb4_general_ci with the below configuration. Failure to complete this step will negatively affect Code Dx
#    performance or functionality.
#
#    [mysqld]
#    optimizer_search_depth=0
#    character-set-server=utf8mb4
#    collation-server=utf8mb4_general_ci
#
#    Also, make sure that sql_mode contains neither ONLY_FULL_GROUP_BY nor PAD_CHAR_TO_FULL_LENGTH.
#
# 6) When you install Code Dx, specify existingSecret (values.yaml) with fields
#    codedx-mariadb-username and codedx.mariadb.password for the username and 
#    password that Code Dx will use to access the Code Dx database.
#
#    If you're using One-Way TLS for MariaDB clients, do not set externalDatabaseSkipTls and specify 
#    a path to the MariaDB server CA as the externalDatabaseServerCert parameter when running the 
#    setup script.
#
# 7) Edit the externalDbUrl connection string by replacing host.docker.internal with your database
#    hostname and codedxdb with the name of the Code Dx database you created.
#
#    Note: The connection string assumes that you're using database port 3306.
#
# Once you have completed these steps, you can either merge the YAML in this file into your own 
# values.yaml file or you can reference this file using the -f parameter when you run helm install.
#

codedxProps:
  dbconnection:
    externalDbUrl: jdbc:mysql://host.docker.internal/codedxdb

mariadb:
  enabled: false

